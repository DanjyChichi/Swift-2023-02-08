import UIKit

//변수와 상수
//변수 : Variable : 변하는 수 -> 숫자나 문자값을 담는 메모리 공간(4바이트, 8바이트)에 이름을 붙여놓은 것
//상수 : Constant : 변수이면서 값이 한 번 정해지면 변경이 불가한 변수를 의미

//예약어
//변수 : var
//상수 : let (Letter의 약자)
 
//변수의 선언(생성, 메모리 공간 확보)
//2가지 방법
//1. 명시적 타입 선언 (자바나 C같은 전통적인 언어에서는 데이터 타입을 모두 명시)
var myVar1 : Int = 10
//2. 암시적 타입 추론 : 입력되는 값에 타입이 결정됨 (컴파일러가 데이터 타입을 결정)
//                : 한 번 타입이 결정되면 변경이 불가
var myVar2 = 10


//상수의 선언
let myLet1 = 3.141592 //원주율
//값을 재할당 시 에러!
//myLet1 = 4.5

//한 줄에 여러 변수를 선언
var myVar3, myVar4, myVar5: Int
myVar3 = 10
myVar4 = 20
myVar5 = 30

//변수 이름 짓는 법
//1. 일반변수, 함수 : 소문자로 시작
//  예) student, count, sum()
//2. 클래스, 구조체, 열거형 : 영대문자로 시작
//  예) Student, Count
//3. 첫단어만 대문자로 (낙타등, Camel Case)
// 예) countOfStudent
// * 가급적 영문법(영어적 표현)에 맞춰서, 콩글리쉬(ㅋㅋ) 노노!!!
//4. 단어와 단어사이에 언더바(_)
// 예) count_student, COUNT_STUDENT(상수일 때)
//5. 첫글자는 무조건 영문자여야 됨.
//6. 특수문자, 한글은 사용할 수 없음('_' 언더바는 가능)

//* 코드를 잘 작성하는 방법 : 가독성있는 코드 작성
// 1. 누구나 쉽게 읽고 해석할 수 있는 코드 ( 호환성이 좋은 코드..., 난해한 코드 x, DBJ 라이브러리 사용 자제)
// 2. 변수나 함수, 클래스/구조체 이름을 바로 이해하도록
//  예) 변수 이름 : a vs eventDayOfThisYear
// 3. 책추천 : Clean Code
//      프로그램 읽는 시간 80% 쓰는 시간 20%
